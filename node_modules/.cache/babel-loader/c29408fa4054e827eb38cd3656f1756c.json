{"ast":null,"code":"var _jsxFileName = \"/Users/amsterdam/Desktop/assignment-Klippa/upload-picture/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Form, Input, Button, Image, Message, Header, Icon, Table } from 'semantic-ui-react';\nimport axios from 'axios';\nimport catchErrors from './utils/catchErrors';\nconst INITIAL_RECEIPT = {\n  image: ''\n};\n\nconst App = () => {\n  const [receipts, setReceipts] = useState([INITIAL_RECEIPT]);\n  const [imagePreview, setImagePreview] = useState([]);\n  const [success, setSuccess] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [disabled, setDisabled] = useState(true);\n  const [error, setError] = useState('');\n  const [responses, setResponses] = useState([]);\n  useEffect(() => {\n    const isReceipt = Object.values(receipts).every(el => Boolean(el));\n    isReceipt ? setDisabled(false) : setDisabled(true);\n  }, [receipts]);\n\n  const handleAddImage = () => {\n    setReceipts([...receipts, INITIAL_RECEIPT]);\n  };\n\n  const handleChange = event => {\n    const {\n      files\n    } = event.target;\n    receipts.map((receipt, index) => setReceipts([...receipts, {\n      image: files[index]\n    }]) && setImagePreview([...imagePreview, window.URL.createObjectURL(files[index])])); // setReceipts((prevState, index) => [...prevState, { image: files[index] }]);\n    // setImagePreview((prevState, index) => [...prevState, window.URL.createObjectURL(files[index])]);\n  };\n\n  const handleSubmit = async () => {\n    try {\n      setLoading(true);\n      setError('');\n      receipts.map(async receipt => {\n        const data = new FormData();\n        data.append('picture', receipt.image, receipt.image.name);\n        const response = await axios.post('https://custom-ocr.klippa.com/api/v1?X-Auth-Key=Bm4CTHGza7FWYE8t6gtkGezwjcZrFrrn', data, {\n          onUploadProgress: progressEvent => {\n            console.log('Upload Progress: ' + Math.round(progressEvent.load / progressEvent * 100));\n          }\n        });\n        console.log(response.data.data);\n        setResponses([...responses, response.data.data]);\n      });\n      setResponses([]);\n      setReceipts([INITIAL_RECEIPT]);\n      setImagePreview([]);\n      setSuccess(true);\n    } catch (error) {\n      catchErrors(error, setError);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n    as: \"h2\",\n    block: true,\n    color: \"green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"file\",\n    color: \"green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }), \"Upload Receipt or Invoice\"), /*#__PURE__*/React.createElement(Form, {\n    loading: loading,\n    error: Boolean(error),\n    success: success,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Message, {\n    error: true,\n    header: \"Oops! Please check your upload presets on your Klippa account. \",\n    content: error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Message, {\n    success: true,\n    icon: \"check\",\n    header: \"Success!\",\n    content: \"Your file(s) has been uploaded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Form.Field, {\n    control: Input,\n    name: \"image\",\n    type: \"file\",\n    accept: \"image/*\",\n    content: \"Select Image\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Image, {\n    src: imagePreview[0],\n    rounded: true,\n    centered: true,\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }), imagePreview && imagePreview.map((receipt, index) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Form.Field, {\n    control: Input,\n    name: \"image\",\n    type: \"file\",\n    accept: \"image/*\",\n    content: \"Select Image\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Image, {\n    src: imagePreview[index],\n    rounded: true,\n    centered: true,\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 15\n    }\n  }))), imagePreview[0] !== '' && /*#__PURE__*/React.createElement(Form.Field, {\n    control: Button,\n    disabled: loading,\n    size: \"mini\",\n    color: \"green\",\n    icon: \"add\",\n    content: \"Try Again\",\n    type: \"button\",\n    onClick: handleAddImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Form.Field, {\n    control: Button,\n    disabled: disabled || loading,\n    color: \"blue\",\n    icon: \"pencil alternate\",\n    content: \"Submit\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Header, {\n    as: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }, \"Responsed Data from API\"), /*#__PURE__*/React.createElement(Table, {\n    compact: true,\n    celled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Table.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Table.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Table.HeaderCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, \"Branch\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, \"Commit\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, \"Contact\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, \"Version\"))), /*#__PURE__*/React.createElement(Table.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Table.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }, responses && responses.map(response => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Table.Cell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 19\n    }\n  }, response.Branch), /*#__PURE__*/React.createElement(Table.Cell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 19\n    }\n  }, response.Commit), /*#__PURE__*/React.createElement(Table.Cell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 19\n    }\n  }, response.Contact), /*#__PURE__*/React.createElement(Table.Cell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 19\n    }\n  }, response.Title), /*#__PURE__*/React.createElement(Table.Cell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 19\n    }\n  }, response.Version)))))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/amsterdam/Desktop/assignment-Klippa/upload-picture/src/App.js"],"names":["React","useState","useEffect","Form","Input","Button","Image","Message","Header","Icon","Table","axios","catchErrors","INITIAL_RECEIPT","image","App","receipts","setReceipts","imagePreview","setImagePreview","success","setSuccess","loading","setLoading","disabled","setDisabled","error","setError","responses","setResponses","isReceipt","Object","values","every","el","Boolean","handleAddImage","handleChange","event","files","target","map","receipt","index","window","URL","createObjectURL","handleSubmit","data","FormData","append","name","response","post","onUploadProgress","progressEvent","console","log","Math","round","load","Branch","Commit","Contact","Title","Version"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Form, Input, Button, Image, Message, Header, Icon, Table } from 'semantic-ui-react';\n\nimport axios from 'axios';\nimport catchErrors from './utils/catchErrors';\n\nconst INITIAL_RECEIPT = {\n  image: '',\n};\n\nconst App = () => {\n  const [receipts, setReceipts] = useState([INITIAL_RECEIPT]);\n  const [imagePreview, setImagePreview] = useState([]);\n  const [success, setSuccess] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [disabled, setDisabled] = useState(true);\n  const [error, setError] = useState('');\n  const [responses, setResponses] = useState([]);\n\n  useEffect(() => {\n    const isReceipt = Object.values(receipts).every((el) => Boolean(el));\n    isReceipt ? setDisabled(false) : setDisabled(true);\n  }, [receipts]);\n\n  const handleAddImage = () => {\n    setReceipts([...receipts, INITIAL_RECEIPT]);\n  };\n\n  const handleChange = (event) => {\n    const { files } = event.target;\n    receipts.map(\n      (receipt, index) =>\n        setReceipts([...receipts, { image: files[index] }]) &&\n        setImagePreview([...imagePreview, window.URL.createObjectURL(files[index])]),\n    );\n    // setReceipts((prevState, index) => [...prevState, { image: files[index] }]);\n    // setImagePreview((prevState, index) => [...prevState, window.URL.createObjectURL(files[index])]);\n  };\n\n  const handleSubmit = async () => {\n    try {\n      setLoading(true);\n      setError('');\n      receipts.map(async (receipt) => {\n        const data = new FormData();\n        data.append('picture', receipt.image, receipt.image.name);\n        const response = await axios.post(\n          'https://custom-ocr.klippa.com/api/v1?X-Auth-Key=Bm4CTHGza7FWYE8t6gtkGezwjcZrFrrn',\n          data,\n          {\n            onUploadProgress: (progressEvent) => {\n              console.log(\n                'Upload Progress: ' + Math.round((progressEvent.load / progressEvent) * 100),\n              );\n            },\n          },\n        );\n        console.log(response.data.data);\n        setResponses([...responses, response.data.data]);\n      });\n      setResponses([]);\n      setReceipts([INITIAL_RECEIPT]);\n      setImagePreview([]);\n      setSuccess(true);\n    } catch (error) {\n      catchErrors(error, setError);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <>\n      <Header as=\"h2\" block color=\"green\">\n        <Icon name=\"file\" color=\"green\" />\n        Upload Receipt or Invoice\n      </Header>\n      <Form loading={loading} error={Boolean(error)} success={success} onSubmit={handleSubmit}>\n        <Message\n          error\n          header=\"Oops! Please check your upload presets on your Klippa account. \"\n          content={error}\n        />\n        <Message success icon=\"check\" header=\"Success!\" content=\"Your file(s) has been uploaded\" />\n        <Form.Field\n          control={Input}\n          name=\"image\"\n          type=\"file\"\n          accept=\"image/*\"\n          content=\"Select Image\"\n          onChange={handleChange}\n        />\n        <Image src={imagePreview[0]} rounded centered size=\"small\" />\n        {imagePreview &&\n          imagePreview.map((receipt, index) => (\n            <>\n              <Form.Field\n                control={Input}\n                name=\"image\"\n                type=\"file\"\n                accept=\"image/*\"\n                content=\"Select Image\"\n                onChange={handleChange}\n              />\n              <Image src={imagePreview[index]} rounded centered size=\"small\" />\n            </>\n          ))}\n\n        {imagePreview[0] !== '' && (\n          <Form.Field\n            control={Button}\n            disabled={loading}\n            size=\"mini\"\n            color=\"green\"\n            icon=\"add\"\n            content=\"Try Again\"\n            type=\"button\"\n            onClick={handleAddImage}\n          />\n        )}\n        <Form.Field\n          control={Button}\n          disabled={disabled || loading}\n          color=\"blue\"\n          icon=\"pencil alternate\"\n          content=\"Submit\"\n          type=\"submit\"\n        />\n      </Form>\n      <Header as=\"h2\">Responsed Data from API</Header>\n      <Table compact celled>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Branch</Table.HeaderCell>\n            <Table.HeaderCell>Commit</Table.HeaderCell>\n            <Table.HeaderCell>Contact</Table.HeaderCell>\n            <Table.HeaderCell>Title</Table.HeaderCell>\n            <Table.HeaderCell>Version</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          <Table.Row>\n            {responses &&\n              responses.map((response) => (\n                <>\n                  <Table.Cell>{response.Branch}</Table.Cell>\n                  <Table.Cell>{response.Commit}</Table.Cell>\n                  <Table.Cell>{response.Contact}</Table.Cell>\n                  <Table.Cell>{response.Title}</Table.Cell>\n                  <Table.Cell>{response.Version}</Table.Cell>\n                </>\n              ))}\n          </Table.Row>\n        </Table.Body>\n      </Table>\n    </>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}